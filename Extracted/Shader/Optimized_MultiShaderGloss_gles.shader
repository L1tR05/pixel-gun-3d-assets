//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Optimized/MultiShaderGloss" {
Properties {
_MainTex ("BaseWithAlpha (RGB)", 2D) = "white" { }
_SelfIllum ("SelfIllumWhiteBlack (RGB)", 2D) = "black" { }
_CutOut ("Cutout", Range(0, 1)) = 0.2
[Header(Shader Properties)] [Toggle(LIGHTING_ENABLE)] _LightingEnable ("Lighting", Float) = 1
[Toggle(ALPHATEST_ENABLE)] _AlphatestEnable ("Alpha test", Float) = 0
[MaterialToggle] _ZWriteEnable ("ZWrite", Float) = 1
[Enum(UnityEngine.Rendering.CullMode)] _CullMode ("Cull Mode", Float) = 2
[KeywordEnum(Off, Tex, Alpha)] _Emission ("Emission", Float) = 0
_SrcBlend ("SrcBlend", Float) = 5
_DstBlend ("DstBlend", Float) = 10
[Header(Scroll properties)] _ScrollX ("Base layer Scroll speed X", Float) = 1
_ScrollY ("Base layer Scroll speed Y", Float) = 0
_SineAmplX ("Base layer sine amplitude X", Float) = 0.5
_SineAmplY ("Base layer sine amplitude Y", Float) = 0.5
_SineFreqX ("Base layer sine freq X", Float) = 10
_SineFreqY ("Base layer sine freq Y", Float) = 10
[Toggle(ONLY_SCROLL)] _OnlyScroll ("Only scroll", Float) = 0
[Toggle(HSV_ACTIVE)] _Hsv_Active ("Enable HSV", Float) = 0
_HSV ("Hue Saturation Brightness Contrast", Vector) = (0,0.5,0.5,0.5)
_Lerp ("Opacity", Range(0, 1)) = 0.5
_EmissionStrength ("Emission", Range(0, 1)) = 0
}
SubShader {
 LOD 150
 Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
 Pass {
  LOD 150
  Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
  ZWrite Off
  Cull Off
  GpuProgramID 27996
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6;
    u_xlat16_6 = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_6) * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_6) + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6 = u_xlat10_2.z * u_xlat16_6 + u_xlat16_11;
    u_xlat16_6 = u_xlat16_6 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1;
    u_xlat16_1 = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = vec3(u_xlat16_1) * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1 + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * vec3(u_xlat16_1) + (-u_xlat10_0.xyz);
    u_xlat16_1 = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = vec3(u_xlat16_1) * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1 = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_1) * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8 = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8;
    u_xlat16_8 = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = vec3(u_xlat16_8) * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * vec3(u_xlat16_8) + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8 = u_xlat10_2.z * u_xlat16_8 + u_xlat16_15.x;
    u_xlat16_8 = u_xlat16_8 * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = vec3(u_xlat16_8) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2 = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * vec3(u_xlat16_2) + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = vec3(u_xlat16_2) * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2 = u_xlat10_1.z * u_xlat16_2 + u_xlat16_15;
    u_xlat16_2 = u_xlat16_2 * 0.333333343;
    u_xlat16_0.xyz = vec3(u_xlat16_2) * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat14;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_2.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD2;
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    SV_Target0.w = u_xlat10_0.w * vs_COLOR0.w;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlatb1 = u_xlat0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat16_2.x = dot(u_xlat0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat0.xyz;
    u_xlat16_15 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_1.xyz = u_xlat16_2.xxx * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat16_3.xyz;
    u_xlat1 = vs_TEXCOORD2;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = vec3(u_xlat1) * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
bool u_xlatb15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb15 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb15) * -1))!=0){discard;}
    u_xlat16_6.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_6.x;
    u_xlat16_6.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_6.xxx * u_xlat10_2.xyz;
    u_xlat16_11 = u_xlat10_2.w * _Lerp;
    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat16_6.xxx + (-u_xlat10_0.xyz);
    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz + u_xlat10_0.xyz;
    u_xlat16_11 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_6.x = u_xlat10_2.z * u_xlat16_6.x + u_xlat16_11;
    u_xlat16_6.x = u_xlat16_6.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_6.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
    u_xlat16_6.xyz = u_xlat16_4.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_6.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
float u_xlat12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb12 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb12) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat5.xyz = u_xlat2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;
    u_xlat0.xyz = u_xlat2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat2.xyz);
    u_xlat1 = u_xlat1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_8;
float u_xlat15;
bool u_xlatb15;
mediump float u_xlat16_19;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat15 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat15 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat15);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    SV_Target0.w = u_xlat10_2.w * vs_COLOR0.w;
    u_xlatb15 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb15) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_19 = u_xlat16_4.y + u_xlat16_4.x;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_19;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_11;
mediump vec2 u_xlat16_15;
float u_xlat21;
bool u_xlatb21;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat10_0.w * vs_COLOR0.w;
    u_xlatb21 = u_xlat16_1<_CutOut;
    if(((int(u_xlatb21) * -1))!=0){discard;}
    u_xlat16_8.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb21 = 0.200000003<u_xlat16_8.x;
    u_xlat16_8.x = (u_xlatb21) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_3.xyz = u_xlat16_8.xxx * u_xlat10_2.xyz;
    u_xlat16_15.xy = _HSV.wy + _HSV.wy;
    u_xlat16_24 = _HSV.z * 2.0 + -1.0;
    u_xlat21 = _HSV.x * 6.28318548;
    u_xlat4.x = sin(u_xlat21);
    u_xlat5 = cos(u_xlat21);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_15.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_24) + u_xlat0.xyz;
    u_xlat21 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat21)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_15.yyy * u_xlat0.xyz + vec3(u_xlat21);
    u_xlat16_15.x = u_xlat10_2.w * _Lerp;
    u_xlat16_6.xyz = u_xlat10_2.xyz * u_xlat16_8.xxx + (-u_xlat0.xyz);
    u_xlat16_6.xyz = u_xlat16_15.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_15.x = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_8.x = u_xlat10_2.z * u_xlat16_8.x + u_xlat16_15.x;
    u_xlat16_8.x = u_xlat16_8.x * 0.333333343;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_8.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_8.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_8.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat12;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_5.xyz = u_xlat10_4.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_5.zxy);
    u_xlat5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;
    u_xlat5.xyz = u_xlat10_4.xyz * vec3(u_xlat1) + u_xlat5.xyz;
    u_xlat0.x = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_4.xyz);
    u_xlat16_2.x = dot(u_xlat10_4.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb4 = 0.200000003<u_xlat16_2.x;
    u_xlat16_2.x = (u_xlatb4) ? 1.0 : 0.0;
    u_xlat16_4 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_4) * u_xlat0.xxx + u_xlat5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_6.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_6.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_6.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_6.xxx;
    u_xlat12 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat12)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_6.yyy * u_xlat0.xyz + vec3(u_xlat12);
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx + (-u_xlat0.xyz);
    u_xlat16_3.x = u_xlat10_1.w * _Lerp;
    u_xlat16_6.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz + u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xxx * u_xlat10_1.xyz;
    u_xlat16_15 = u_xlat16_3.y + u_xlat16_3.x;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_2.x = u_xlat10_1.z * u_xlat16_2.x + u_xlat16_15;
    u_xlat16_2.x = u_xlat16_2.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_6.xyz * u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * vs_COLOR0.xyz + u_xlat16_0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD2;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = 1.0;
    u_xlat16_15 = u_xlat16_15 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_15<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = 1.0;
    u_xlat16_15 = u_xlat16_15 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_15<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = 1.0;
    u_xlat16_15 = u_xlat16_15 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_15<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
mediump float u_xlat16_21;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_15 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_10.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_10.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat6 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat6) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_15) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_9.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_21 = 1.0;
    u_xlat16_21 = u_xlat16_21 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_21<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_21 = u_xlat16_7.y + u_xlat16_7.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_21;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
mediump float u_xlat16_21;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_15 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_10.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_10.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat6 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat6) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_15) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_9.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_21 = 1.0;
    u_xlat16_21 = u_xlat16_21 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_21<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_21 = u_xlat16_7.y + u_xlat16_7.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_21;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
mediump float u_xlat16_21;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_7.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_15 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_10.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_10.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_10.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat6 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat6) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_15) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_9.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_21 = 1.0;
    u_xlat16_21 = u_xlat16_21 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_21<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_21 = u_xlat16_7.y + u_xlat16_7.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_21;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    SV_Target0.w = vs_COLOR0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec2 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_1.x = 1.0;
    u_xlat16_1.x = u_xlat16_1.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_1.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_1.x = 1.0;
    u_xlat16_1.x = u_xlat16_1.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_1.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_1.x = 1.0;
    u_xlat16_1.x = u_xlat16_1.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_1.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_15;
void main()
{
    u_xlatb0 = 1.0<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_5.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_7.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_7.xyz + u_xlat10_0.xyz;
    u_xlat16_15 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_15;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_18;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_18 = 1.0;
    u_xlat16_18 = u_xlat16_18 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_18<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_4 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_4;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_18;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_18;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_18 = 1.0;
    u_xlat16_18 = u_xlat16_18 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_18<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_4 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_4;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_18;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_18;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_18 = 1.0;
    u_xlat16_18 = u_xlat16_18 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_18<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_4 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_4;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_18;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_8;
float u_xlat15;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3 = u_xlat16_6.y + u_xlat16_6.x;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3 = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_3;
    u_xlat16_8.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat10_0.xyz);
    u_xlat16_1.x = u_xlat10_2.w * _Lerp;
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz + u_xlat10_0.xyz;
    u_xlat16_4.xyz = u_xlat10_0.www * u_xlat16_8.xyz;
    u_xlat16_1.x = u_xlat16_3 * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD2;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_3.x = 1.0;
    u_xlat16_3.x = u_xlat16_3.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_3.x = 1.0;
    u_xlat16_3.x = u_xlat16_3.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    u_xlat16_3.x = 1.0;
    u_xlat16_3.x = u_xlat16_3.x * vs_COLOR0.w;
    SV_Target0.w = u_xlat16_3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump float u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_17 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_17) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_10.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz + u_xlat0.xyz;
    u_xlat16_24 = 1.0;
    u_xlat16_24 = u_xlat16_24 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_24<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_6 = u_xlat16_8.y + u_xlat16_8.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_6;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_24;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump float u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_17 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_17) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_10.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz + u_xlat0.xyz;
    u_xlat16_24 = 1.0;
    u_xlat16_24 = u_xlat16_24 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_24<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_6 = u_xlat16_8.y + u_xlat16_8.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_6;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_24;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	float _CutOut;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
bool u_xlatb0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
float u_xlat5;
mediump float u_xlat16_6;
float u_xlat7;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
mediump float u_xlat16_24;
void main()
{
    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1.x = dot(u_xlat10_0.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb2 = 0.200000003<u_xlat16_1.x;
    u_xlat16_1.x = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat10_2 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_8.xyz = u_xlat16_1.xxx * u_xlat10_2.xyz;
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat16_17 = _HSV.z * 2.0 + -1.0;
    u_xlat4.x = _HSV.x * 6.28318548;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_11.xyz = u_xlat10_0.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_11.zxy);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_11.xyz;
    u_xlat4.xyz = u_xlat10_0.xyz * vec3(u_xlat5) + u_xlat4.xyz;
    u_xlat16_0.x = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_0.xyz);
    u_xlat16_0.x = u_xlat16_0.x * 0.57735002;
    u_xlat7 = (-u_xlat5) + 1.0;
    u_xlat0.xyz = u_xlat16_0.xxx * vec3(u_xlat7) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat0.xyz = vec3(u_xlat16_17) + u_xlat0.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat4.xxx);
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + u_xlat4.xxx;
    u_xlat16_3.x = u_xlat10_2.w * _Lerp;
    u_xlat16_10.xyz = u_xlat10_2.xyz * u_xlat16_1.xxx + (-u_xlat0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz + u_xlat0.xyz;
    u_xlat16_24 = 1.0;
    u_xlat16_24 = u_xlat16_24 * vs_COLOR0.w;
    u_xlatb0 = u_xlat16_24<_CutOut;
    if(((int(u_xlatb0) * -1))!=0){discard;}
    u_xlat16_6 = u_xlat16_8.y + u_xlat16_8.x;
    u_xlat16_1.x = u_xlat10_2.z * u_xlat16_1.x + u_xlat16_6;
    u_xlat16_1.x = u_xlat16_1.x * 0.333333343;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_0.xyz = u_xlat16_1.xxx * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat10_0.www * u_xlat16_3.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * vs_COLOR0.xyz + u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD2;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat16_7.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = u_xlat16_24;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
vec2 u_xlat10;
vec2 u_xlat14;
float u_xlat15;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0 = vec4(u_xlat15) * u_xlat0.xyzz;
    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
    u_xlat16_1 = u_xlat0.yzwx * u_xlat0.xywz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
    u_xlat4.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_2.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    vs_COLOR0.xyz = u_xlat4.xxx * _LightColor0.xyz + u_xlat0.xyz;
    vs_COLOR0.w = 1.0;
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat10.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat4.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat10.xy = u_xlat10.xy + u_xlat4.xy;
    u_xlat14.x = u_xlat0.x * _SineAmplX + u_xlat10.x;
    u_xlat14.y = u_xlat0.y * _SineAmplY + u_xlat10.y;
    u_xlat0.xy = (-u_xlat4.xy) + u_xlat14.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat4.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump float _Lerp;
uniform 	mediump float _EmissionStrength;
uniform 	mediump vec4 _HSV;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat1;
mediump float u_xlat16_1;
lowp vec4 u_xlat10_1;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_9;
float u_xlat18;
bool u_xlatb18;
mediump float u_xlat16_22;
void main()
{
    u_xlat0.x = _HSV.x * 6.28318548;
    u_xlat1 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002);
    u_xlat16_6.xyz = u_xlat10_2.zxy * vec3(0.57735002, 0.57735002, 0.57735002) + (-u_xlat16_6.zxy);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;
    u_xlat0.xyz = u_xlat10_2.xyz * vec3(u_xlat1) + u_xlat0.xyz;
    u_xlat18 = (-u_xlat1) + 1.0;
    u_xlat16_1 = dot(vec3(0.57735002, 0.57735002, 0.57735002), u_xlat10_2.xyz);
    u_xlat16_1 = u_xlat16_1 * 0.57735002;
    u_xlat0.xyz = vec3(u_xlat16_1) * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_3.xy = _HSV.wy + _HSV.wy;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_3.xxx + vec3(0.5, 0.5, 0.5);
    u_xlat16_3.x = _HSV.z * 2.0 + -1.0;
    u_xlat0.xyz = u_xlat0.xyz + u_xlat16_3.xxx;
    u_xlat18 = dot(u_xlat0.xyz, vec3(0.298999995, 0.587000012, 0.114));
    u_xlat0.xyz = (-vec3(u_xlat18)) + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat16_3.yyy * u_xlat0.xyz + vec3(u_xlat18);
    u_xlat16_3.x = dot(u_xlat10_2.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb18 = 0.200000003<u_xlat16_3.x;
    u_xlat16_3.x = (u_xlatb18) ? 1.0 : 0.0;
    u_xlat10_1 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlat16_9.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx + (-u_xlat0.xyz);
    u_xlat16_4.x = u_xlat10_1.w * _Lerp;
    u_xlat16_9.xyz = u_xlat16_4.xxx * u_xlat16_9.xyz + u_xlat0.xyz;
    u_xlat16_4.xyz = u_xlat10_2.www * u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat10_1.xyz;
    u_xlat16_22 = u_xlat16_5.y + u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(vec3(_EmissionStrength, _EmissionStrength, _EmissionStrength));
    u_xlat16_3.x = u_xlat10_1.z * u_xlat16_3.x + u_xlat16_22;
    u_xlat16_3.x = u_xlat16_3.x * 0.333333343;
    u_xlat16_0.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_0.xyz;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_9.xyz * vs_COLOR0.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD2;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _Time;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _SelfIllum_ST;
uniform 	float _ScrollX;
uniform 	float _ScrollY;
uniform 	float _SineAmplX;
uniform 	float _SineAmplY;
uniform 	float _SineFreqX;
uniform 	float _SineFreqY;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying mediump vec4 vs_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
varying highp float vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
vec2 u_xlat5;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    gl_Position = u_xlat0;
    vs_TEXCOORD2 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_COLOR0 = vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0.xy = _Time.xx * vec2(_SineFreqX, _SineFreqY);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4.xy = _Time.xy * vec2(_ScrollX, _ScrollY);
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _SelfIllum_ST.xy + _SelfIllum_ST.zw;
    u_xlat4.xy = u_xlat4.xy + u_xlat1.xy;
    u_xlat5.x = u_xlat0.x * _SineAmplX + u_xlat4.x;
    u_xlat5.y = u_xlat0.y * _SineAmplY + u_xlat4.y;
    u_xlat0.xy = (-u_xlat1.xy) + u_xlat5.xy;
    vs_TEXCOORD1.xy = in_COLOR0.xx * u_xlat0.xy + u_xlat1.xy;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _CutOut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _SelfIllum;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
lowp vec4 u_xlat10_0;
lowp vec3 u_xlat10_1;
bool u_xlatb1;
mediump float u_xlat16_2;
void main()
{
    u_xlat10_0 = texture2D(_SelfIllum, vs_TEXCOORD1.xy);
    u_xlatb1 = u_xlat10_0.w<_CutOut;
    if(((int(u_xlatb1) * -1))!=0){discard;}
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2 = dot(u_xlat10_1.xyz, vec3(0.5, 0.5, 0.5));
    u_xlatb1 = 0.200000003<u_xlat16_2;
    u_xlat16_2 = (u_xlatb1) ? 1.0 : 0.0;
    SV_Target0.xyz = u_xlat10_0.xyz * vec3(u_xlat16_2);
    SV_Target0.w = u_xlat10_0.w;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_OFF" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_TEX" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "ALPHATEST_ENABLE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "LIGHTING_ENABLE" "IS_OPAQUE" "HSV_ACTIVE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" "_EMISSION_ALPHA" "ALPHATEST_ENABLE" "ONLY_SCROLL" }
""
}
}
}
}
CustomEditor "MultiShaderGUI"
}